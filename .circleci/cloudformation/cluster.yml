Description: >
  Create Kubernetes Cluster

Parameters:
  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String
    Default: UdacityBlog

Resources:
  ControlPlaneSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Cluster communication with worker nodes
      VpcId: 
        Fn::ImportValue: !Sub ${EnvironmentName}-VPCID

  EKSCluster:
    Type: AWS::EKS::Cluster
    Properties:
      Name: !Sub ${EnvironmentName}-Cluster
      RoleArn: "arn:aws:iam::703318274498:role/blogEKSClusterRole"
      ResourcesVpcConfig:
        SecurityGroupIds:
          - !Ref ControlPlaneSecurityGroup
        SubnetIds:
          - Fn::ImportValue: !Sub "${EnvironmentName}-PUB1-SN"
          - Fn::ImportValue: !Sub "${EnvironmentName}-PUB2-SN"
        EndpointPublicAccess: false
        EndpointPrivateAccess: true
        # PublicAccessCidrs: [ "10.0.0.0/24" ]
    DependsOn: [ControlPlaneSecurityGroup]

  EKSNodegroup:
    Type: 'AWS::EKS::Nodegroup'
    Properties:
      ClusterName: !Sub ${EnvironmentName}-Cluster
      NodegroupName: !Sub ${EnvironmentName}-nodegroup
      NodeRole: 'arn:aws:iam::703318274498:role/blogEKSWorkerNodeRole'
      AmiType: 'AL2_x86_64'
      CapacityType: 'ON_DEMAND'
      InstanceTypes: [t3.micro]
      ScalingConfig:
        MinSize: 2
        DesiredSize: 2
        MaxSize: 2
      Subnets:
        - Fn::ImportValue: !Sub "${EnvironmentName}-PUB1-SN"
        - Fn::ImportValue: !Sub "${EnvironmentName}-PUB2-SN"
    DependsOn: [EKSCluster]
